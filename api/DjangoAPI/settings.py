"""

contains all the setting or the configurations needed for the project 

Django settings for DjangoAPI project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os # nesto za slike valjda pogledaj, dodao kad sam dodavao mogucnosti za dodati slike (ZA UPRAVLJANJE DIREKTORIJIMA KAO STO RADIM U CMDU)


BASE_DIR=Path(__file__).resolve(strict=True).parent.parent #BASE_DIR je moj project direktori
#When a module is loaded from a file in Python, __file__ is set to its path. 
# which shows the root directory of your project
MEDIA_URL = '/Photos/' # da je moj media direktorij/file u fileu zvanom photos
MEDIA_ROOT=os.path.join(BASE_DIR, "Photos") #The OS module in Python provides functions for creating and removing a directory (folder), fetching its contents, changing and identifying the current directory, etc. ... So, import it using the import os statement before using its functions.

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7=%++w9b#behs(jywdx=4iz^wnj$gb(q08)^pp78hn=qayihfv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #register the app (EmployeeApp) and the required modules
    'rest_framework', #Reprezentativni prijenos stanja softverski je arhitektonski stil koji je stvoren za usmjeravanje dizajna i razvoja arhitekture za World Wide Web. REST definira skup ograničenja za ponašanje arhitekture distribuiranog hipermedijalnog sustava na Internetu, poput Weba.
    'corsheaders', #Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to indicate any origins (domain, scheme, or port) other than its own from which a browser should permit loading resources.
    'EmployeeApp.apps.EmployeeappConfig'
] 

CORS_ORIGIN_ALLOW_ALL = True #ovo je dodano

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # ovo je dodano
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DjangoAPI.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoAPI.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        #dodavanjne podataka nase databaze od postgree i azure server databaze
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'proba',
        'USER': 'matija',
        'PASSWORD': 'Mrzimlozinkeiface22!',
        'HOST':'matija.postgres.database.azure.com',
        'PORT':'5432'
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
